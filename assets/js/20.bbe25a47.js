(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{234:function(t,e,r){"use strict";r.r(e);var i=r(0),a=Object(i.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("如果你对animation，transition，transform，translate傻傻分不清的话，可以先阅读一下这篇"),r("a",{attrs:{href:"https://juejin.im/post/5b137e6e51882513ac201dfb",target:"_blank",rel:"noopener noreferrer"}},[t._v("文章"),r("OutboundLink")],1),t._v("。这里贴出一个表格加以概括：")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),r("p",[t._v("下面再介绍一下transition和animation的各自特点：")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),r("p",[t._v("在官方的介绍上介绍这个属性是transition属性的扩展，弥补了transition的很多不足，我理解为animation是由多个transition的效果叠加，并且可操作性更强，能够做出复杂酷炫的效果(前提是你爱折腾)")]),t._v(" "),r("p",[t._v("animation与transition 不同的是，keyframes提供更多的控制，尤其是时间轴的控制，这点让css animation更加强大，使得flash的部分动画效果可以由css直接控制完成，而这一切，仅仅只需要几行代码，也因此诞生了大量基于css的动画库，用来取代flash的动画部分。")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),r("p",[t._v("这个知识点在《CSS揭秘》一书中也有介绍，下面给出一个例子。")]),t._v(" "),r("p",[t._v("首先我们给出每一帧图片拼接成的雪碧图：")]),t._v(" "),t._m(12),t._v(" "),r("p",[t._v("下面我们就通过调整background-position让它动起来：看不见的可以点击"),r("a",{attrs:{href:"http://jsfiddle.net/Mavericker/hndwvpsx/53/embedded/html,css,result/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),r("OutboundLink")],1)]),t._v(" "),r("iframe",{attrs:{width:"100%",height:"300",src:"//jsfiddle.net/Mavericker/hndwvpsx/53/embedded/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"}}),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),r("iframe",{attrs:{width:"100%",height:"300",src:"//jsfiddle.net/Mavericker/fg2e05at/46/embedded/html,css,result/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"}}),t._v(" "),t._m(16),t._v(" "),r("p",[t._v("思想就是在关键帧为50%的时候调整"),r("code",[t._v("opacity")]),t._v("或者"),r("code",[t._v("color")]),t._v("或者"),r("code",[t._v("background")]),t._v("属性，将其设为透明(transparent)，并使用"),r("code",[t._v("steps(1)")]),t._v("函数实现硬切的效果。看不见的可以点"),r("router-link",{attrs:{to:"//jsfiddle.net/Mavericker/zhsxbfu8/50/embedded/html,css,result/"}},[t._v("这里")]),t._v("。")],1),t._v(" "),r("iframe",{attrs:{width:"100%",height:"300",src:"//jsfiddle.net/Mavericker/zhsxbfu8/50/embedded/html,css,result/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"}}),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),r("p",[t._v("这样我们就可以为宽度设置关键帧了，然后结合"),r("code",[t._v("steps")]),t._v("函数，对于光标的显示我们可以通过"),r("code",[t._v("border-right")]),t._v("样式结合之前的闪烁动画加以实现。看不见的可以点"),r("router-link",{attrs:{to:"//jsfiddle.net/Mavericker/mgn4rtdy/103/embedded/html,css,result/"}},[t._v("这里")]),t._v("，如果想实现中文字符的打字效果，把ch换成em就好了。")],1),t._v(" "),r("iframe",{attrs:{width:"100%",height:"300",src:"//jsfiddle.net/Mavericker/mgn4rtdy/103/embedded/html,css,result/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"}}),t._v(" "),t._m(22),t._v(" "),r("p",[t._v("另外一种方法可以通过setTimeout()进行实现，每次多获取一个待打出的字符串的值，输出，覆盖原来输出的内容即可JS打字机效果。看不见的可以点"),r("router-link",{attrs:{to:"//jsfiddle.net/Mavericker/4dtmjnxc/57/embedded/"}},[t._v("这里")]),t._v("。这里实现了多行打印的效果，并通过"),r("code",[t._v("<span>")]),t._v("标签实现光标跟随闪烁的效果。")],1),t._v(" "),r("iframe",{attrs:{width:"100%",height:"300",src:"//jsfiddle.net/Mavericker/4dtmjnxc/57/embedded/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"}}),t._v(" "),t._m(23),t._v(" "),r("p",[t._v("方法就是通过设置"),r("code",[t._v("transform-origin")]),t._v("来确认环绕中心的位置，然后通过对"),r("code",[t._v("transform:rotate")]),t._v("设置关键帧，即从0deg转到360deg即可，看不见的可以点"),r("router-link",{attrs:{to:"//jsfiddle.net/Mavericker/pnbuy02d/28/embedded/"}},[t._v("这里")]),t._v("。")],1),t._v(" "),r("iframe",{attrs:{width:"100%",height:"300",src:"//jsfiddle.net/Mavericker/pnbuy02d/28/embedded/",allowfullscreen:"allowfullscreen",allowpaymentrequest:"",frameborder:"0"}})])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"css动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css动画","aria-hidden":"true"}},[this._v("#")]),this._v(" CSS动画")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"基础知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础知识","aria-hidden":"true"}},[this._v("#")]),this._v(" 基础知识")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("table",[r("thead",[r("tr",[r("th",{staticStyle:{"text-align":"left"}},[t._v("属性")]),t._v(" "),r("th",[t._v("含义")])])]),t._v(" "),r("tbody",[r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("animation")]),t._v(" "),r("td",[t._v("动画；用于设置动画属性，他是一个简写的属性，包含6个属性")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("transition")]),t._v(" "),r("td",[t._v("过渡；用于设置元素的样式过度，和animation有着类似的效果，但细节上有很大的不同")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("transform")]),t._v(" "),r("td",[t._v("变形；用于元素进行旋转、缩放、移动或倾斜，和设置样式的动画并没有什么关系，就相当于color一样用来设置元素的“外表”")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("translate")]),t._v(" "),r("td",[t._v("移动； translate只是transform的一个属性值，即移动。")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"transition与animation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transition与animation","aria-hidden":"true"}},[this._v("#")]),this._v(" transition与animation")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"transition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transition","aria-hidden":"true"}},[this._v("#")]),this._v(" transition")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("需要事件触发，所以没法在网页加载时自动发生")]),this._v(" "),e("li",[this._v("是一次性的，不能重复发生，除非一再触发")]),this._v(" "),e("li",[this._v("只能定义开始状态和结束状态，不能定义中间状态，也就是说只有两个状态")]),this._v(" "),e("li",[this._v("一条transition规则，只能定义一个属性的变化，不能涉及多个属性。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"animation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#animation","aria-hidden":"true"}},[this._v("#")]),this._v(" animation")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"不同点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不同点","aria-hidden":"true"}},[this._v("#")]),this._v(" 不同点")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("触发条件不同。transition通常和hover等事件配合使用，由事件触发。animation则和gif动态图差不多，立即播放。")]),this._v(" "),e("li",[this._v("循环。 animation可以设定循环次数。")]),this._v(" "),e("li",[this._v("精确性。 animation可以设定每一帧的样式和时间。tranistion 只能设定头尾。 animation中可以设置每一帧需要单独变化的样式属性， transition中所有样式属性都要一起变化。")]),this._v(" "),e("li",[this._v("与javascript的交互。animation与js的交互不是很紧密。tranistion和js的结合更强大。js设定要变化的样式，transition负责动画效果，天作之合，比之前只能用js时爽太多。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"结论"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结论","aria-hidden":"true"}},[this._v("#")]),this._v(" 结论")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("如果要灵活定制多个帧以及循环，用animation。")]),this._v(" "),e("li",[this._v("如果要简单的from to 效果，用 transition。")]),this._v(" "),e("li",[this._v("如果要使用js灵活设定动画属性，用transition。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"逐帧动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#逐帧动画","aria-hidden":"true"}},[this._v("#")]),this._v(" 逐帧动画")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http://ofluknnfq.bkt.clouddn.com/blog/180917/h3HAKj0d56.png?imageslim",alt:"mark"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("方法就是通过使用"),e("code",[this._v("steps()")]),this._v("这个阶跃调速函数来设置"),e("code",[this._v("animation-timing-function")]),this._v("从而达到逐帧切换的效果。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"加载动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加载动画","aria-hidden":"true"}},[this._v("#")]),this._v(" 加载动画")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("p",[t._v("思想就是通过调整"),r("code",[t._v("<span>")]),t._v("标签的宽度和"),r("code",[t._v("margin-right")]),t._v("来达到显示一个点，两个点。三个点的效果，这里需要注意的是要将"),r("code",[t._v("<span>")]),t._v("设为"),r("code",[t._v("inline-block")]),t._v("变成块级元素才可以设置"),r("code",[t._v("width")]),t._v('，看不见的可以点[这里](//jsfiddle.net/Mavericker/fg2e05at/46/embedded/html,css,result/" allowfullscreen="allowfullscreen)：')])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"闪烁动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#闪烁动画","aria-hidden":"true"}},[this._v("#")]),this._v(" 闪烁动画")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"打字动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打字动画","aria-hidden":"true"}},[this._v("#")]),this._v(" 打字动画")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"ch单位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ch单位","aria-hidden":"true"}},[this._v("#")]),this._v(" ch单位")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("p",[t._v("思想就是运用"),r("code",[t._v("ch")]),t._v("这个单位，之所以要用这个单位，原因就是"),r("code",[t._v("font-size")]),t._v("属性相对高度而言的，比如说"),r("code",[t._v("font-size=12px")]),t._v("，那么对于中文字符，高宽一致，所以宽度也是12px，而对于英文字体就不一样了，有些字母的高度宽度是不一致的，所以我们没有办法通过"),r("code",[t._v("font-size")]),t._v("设置的大小来推断出一串英文字符的宽度。这里就引出了"),r("code",[t._v("ch")]),t._v("这个单位。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("它表示'0'字形的宽度，它应该是最不为人知的一个新单位。但对于等宽字体来说，这是一个例外。"),e("strong",[this._v("在等宽字体中，‘0’字形的宽度和其他所有字形的宽度是一样的")]),this._v("。因此，如果我们用ch单位来表达英文字符串的宽度，那取值实际上就是字符的数量。像我们常用的Consolas就是英文等宽字体。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"具体实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#具体实现","aria-hidden":"true"}},[this._v("#")]),this._v(" 具体实现")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"另外一种方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#另外一种方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 另外一种方法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"环绕路径动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环绕路径动画","aria-hidden":"true"}},[this._v("#")]),this._v(" 环绕路径动画")])}],!1,null,null,null);e.default=a.exports}}]);