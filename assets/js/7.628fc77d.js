(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{173:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("JS 中分为七种内置类型，七种内置类型又分为两大类型：基本类型和对象（Object）。")]),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("其中 JS 的数字类型是浮点类型的，没有整型。并且浮点类型基于 IEEE 754标准实现，在使用中会遇到某些 "),a("a",{attrs:{href:"https://yuchengkai.cn/docs/zh/frontend/##%E4%B8%BA%E4%BB%80%E4%B9%88-01--02--03",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bug"),a("OutboundLink")],1),t._v("。"),a("code",[t._v("NaN")]),t._v(" 也属于 "),a("code",[t._v("number")]),t._v(" 类型，并且 "),a("code",[t._v("NaN")]),t._v(" 不等于自身。")]),t._v(" "),a("p",[t._v("对于基本类型来说，如果使用字面量的方式，那么这个变量只是个字面量，只有在必要的时候才会转换为对应的类型")]),t._v(" "),t._m(3),a("p",[t._v("对象（Object）是引用类型，在使用过程中会遇到浅拷贝和深拷贝的问题。")]),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),a("p",[t._v("只有当加法运算时，其中一方是字符串类型，就会把另一个也转为字符串类型。其他运算只要其中一方是数字，那么另一方就转为数字。并且加法运算会触发三种类型转换：将值转换为原始值，转换为数字，转换为字符串。")]),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"javascript基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript基础","aria-hidden":"true"}},[this._v("#")]),this._v(" JavaScript基础")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"内置类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 内置类型")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("基本类型有六种： "),a("code",[t._v("null")]),t._v("，"),a("code",[t._v("undefined")]),t._v("，"),a("code",[t._v("boolean")]),t._v("，"),a("code",[t._v("number")]),t._v("，"),a("code",[t._v("string")]),t._v("，"),a("code",[t._v("symbol")]),t._v("。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("111")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 这只是字面量，不是 number 类型")]),t._v("\na"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 使用时候才会转换为对象类型")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'FE'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\nb"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'EF'")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// EF")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"typeof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof","aria-hidden":"true"}},[this._v("#")]),this._v(" Typeof")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("typeof")]),this._v(" 对于基本类型，除了 "),s("code",[this._v("null")]),this._v(" 都可以显示正确的类型")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 'number'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 'string'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" undefined "),a("span",{attrs:{class:"token comment"}},[t._v("// 'undefined'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 'boolean'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 'symbol'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" b "),a("span",{attrs:{class:"token comment"}},[t._v("// b 没有声明，但是还会显示 undefined")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("typeof")]),this._v(" 对于对象，除了函数都会显示 "),s("code",[this._v("object")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),a("span",{attrs:{class:"token comment"}},[t._v("// 'function'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对于 "),s("code",[this._v("null")]),this._v(" 来说，虽然它是基本类型，但是会显示 "),s("code",[this._v("object")]),this._v("，这是一个存在很久了的 Bug")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[this._v("typeof")]),this._v(" "),s("span",{attrs:{class:"token keyword"}},[this._v("null")]),this._v(" "),s("span",{attrs:{class:"token comment"}},[this._v("// 'object'")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("PS：为什么会出现这种情况呢？因为在 JS 的最初版本中，使用的是 32 位系统，为了性能考虑使用低位存储了变量的类型信息，"),s("code",[this._v("000")]),this._v(" 开头代表是对象，然而 "),s("code",[this._v("null")]),this._v(" 表示为全零，所以将它错误的判断为 "),s("code",[this._v("object")]),this._v("。虽然现在的内部类型判断代码已经改变了，但是对于这个 Bug 却是一直流传下来。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果我们想获得一个变量的正确类型，可以通过 "),s("code",[this._v("Object.prototype.toString.call(xx)")]),this._v("。这样我们就可以获得类似 "),s("code",[this._v("[Object Type]")]),this._v(" 的字符串。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 我们也可以这样判断 undefined")]),t._v("\na "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" undefined\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 但是 undefined 不是保留字，能够在低版本浏览器被赋值")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" undefined "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 这样判断就会出错")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 所以可以用下面的方式来判断，并且代码量更少")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 因为 void 后面随便跟上一个组成表达式")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 返回就是 undefined")]),t._v("\na "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换","aria-hidden":"true"}},[this._v("#")]),this._v(" 类型转换")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"转boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转boolean","aria-hidden":"true"}},[this._v("#")]),this._v(" 转Boolean")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("在条件判断时，除了 "),a("code",[t._v("undefined")]),t._v("， "),a("code",[t._v("null")]),t._v("， "),a("code",[t._v("false")]),t._v("， "),a("code",[t._v("NaN")]),t._v("， "),a("code",[t._v("''")]),t._v("， "),a("code",[t._v("0")]),t._v("， "),a("code",[t._v("-0")]),t._v("，其他所有值都转为 "),a("code",[t._v("true")]),t._v("，包括所有对象。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"对象转基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象转基本类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 对象转基本类型")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对象在转换基本类型时，首先会调用 "),s("code",[this._v("valueOf")]),this._v(" 然后调用 "),s("code",[this._v("toString")]),this._v("。并且这两个方法你是可以重写的。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当然你也可以重写 "),s("code",[this._v("Symbol.toPrimitive")]),this._v(" ，该方法在转基本类型时调用优先级最高。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("toString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'1'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toPrimitive"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),a("span",{attrs:{class:"token comment"}},[t._v("// => 3")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),a("span",{attrs:{class:"token comment"}},[t._v("// => '12'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"四则运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四则运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 四则运算符")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// '11'")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// '1,22,1'")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// [1, 2].toString() -> '1,2'")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// [2, 1].toString() -> '2,1'")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// '1,2' + '2,1' = '1,22,1'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对于加号需要注意这个表达式 "),s("code",[this._v("'a' + + 'b'")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'b'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// -> "aNaN"')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 因为 + 'b' -> NaN")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 你也许在一些代码中看到过 + '1' -> 1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作符","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("code",[this._v("==")]),this._v(" 操作符")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/30/16275f89ebf931e9",alt:"img"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("上图中的 "),s("code",[this._v("toPrimitive")]),this._v(" 就是对象转基本类型。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这里来解析一道题目 "),s("code",[this._v("[] == ![] // -> true")]),this._v(" ，下面是这个表达式为何为 "),s("code",[this._v("true")]),this._v(" 的步骤")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// [] 转成 true，然后取反变成 false")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 根据第 8 条得出")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("ToNumber")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 根据第 10 条得出")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("ToPrimitive")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// [].toString() -> ''")]),t._v("\n"),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 根据第 6 条得出")]),t._v("\n"),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// -> true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符","aria-hidden":"true"}},[this._v("#")]),this._v(" 比较运算符")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("如果是对象，就通过 "),s("code",[this._v("toPrimitive")]),this._v(" 转换对象")]),this._v(" "),s("li",[this._v("如果是字符串，就通过 "),s("code",[this._v("unicode")]),this._v(" 字符索引来比较")])])}],!1,null,null,null);s.default=e.exports}}]);