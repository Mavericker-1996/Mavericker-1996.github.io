(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{164:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"ajax跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax跨域","aria-hidden":"true"}},[t._v("#")]),t._v(" ajax跨域")]),t._v(" "),a("h2",{attrs:{id:"同源策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同源策略","aria-hidden":"true"}},[t._v("#")]),t._v(" 同源策略")]),t._v(" "),a("ul",[a("li",[t._v("协议相同")]),t._v(" "),a("li",[t._v("域名相同")]),t._v(" "),a("li",[t._v("端口相同")])]),t._v(" "),a("p",[t._v("举例来说，"),a("code",[t._v("http://www.example.com/dir/page.html")]),t._v("这个网址，协议是"),a("code",[t._v("http://")]),t._v("，域名是"),a("code",[t._v("www.example.com")]),t._v("，端口是"),a("code",[t._v("80")]),t._v("（默认端口可以省略）。它的同源情况如下。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("http://www.example.com/dir2/other.html")]),t._v("：同源\n"),a("code",[t._v("http://example.com/dir/other.html")]),t._v("：不同源（域名不同）\n"),a("code",[t._v("http://v2.www.example.com/dir/other.html")]),t._v("：不同源（域名不同）\n"),a("code",[t._v("http://www.example.com:81/dir/other.html")]),t._v("：不同源（端口不同）")])]),t._v(" "),a("h2",{attrs:{id:"目的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目的","aria-hidden":"true"}},[t._v("#")]),t._v(" 目的")]),t._v(" "),a("p",[t._v("同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据。")]),t._v(" "),a("p",[t._v("设想这样一种情况：A网站是一家银行，用户登录以后，又去浏览其他网站。如果其他网站可以读取A网站的 Cookie，会发生什么？")]),t._v(" "),a("p",[t._v("很显然，如果 Cookie 包含隐私（比如存款总额），这些信息就会泄漏。更可怕的是，Cookie 往往用来保存用户的登录状态，如果用户没有退出登录，其他网站就可以冒充用户，为所欲为。因为浏览器同时还规定，提交表单不受同源政策的限制。")]),t._v(" "),a("p",[t._v('由此可见，"同源政策"是必需的，否则 Cookie 可以共享，互联网就毫无安全可言了。')]),t._v(" "),a("h2",{attrs:{id:"限制范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限制范围","aria-hidden":"true"}},[t._v("#")]),t._v(" 限制范围")]),t._v(" "),a("p",[t._v('随着互联网的发展，"同源政策"越来越严格。目前，如果非同源，共有三种行为受到限制。')]),t._v(" "),a("blockquote",[a("p",[t._v("（1） Cookie、LocalStorage 和 IndexDB 无法读取。\n（2） DOM 无法获得。\n（3） AJAX 请求不能发送。")])]),t._v(" "),a("p",[t._v("虽然这些限制是必要的，但是有时很不方便，合理的用途也受到影响。下面，我将详细介绍，如何规避上面三种限制")]),t._v(" "),a("h2",{attrs:{id:"jsonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsonp","aria-hidden":"true"}},[t._v("#")]),t._v(" JSONP")]),t._v(" "),a("p",[t._v("JSONP是服务器与客户端跨源通信的常用方法。最大特点就是简单适用，老式浏览器全部支持，服务器改造非常小。 JSONP 使用简单且兼容性不错，但是只限于 "),a("code",[t._v("get")]),t._v(" 请求。")]),t._v(" "),a("h3",{attrs:{id:"实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),a("p",[t._v("JSONP之所以能够用来解决跨域方案,主要是因为 "),a("code",[t._v("<script>")]),t._v(" 脚本拥有跨域能力,而JSONP正是利用这一点来实现。具体原理如图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://segmentfault.com/img/remote/1460000012469724?w=901&h=701",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"实现流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现流程")]),t._v(" "),a("p",[t._v("JSONP的实现步骤大致如下(参考了来源中的文章)")]),t._v(" "),a("ul",[a("li",[t._v("客户端网页网页通过添加一个"),a("code",[t._v("<script>")]),t._v("元素，向服务器请求JSON数据，这种做法不受同源政策限制")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("     "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("addScriptTag")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createElement")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'script'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       script"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"type"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"text/javascript"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       script"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" src"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     \n     window"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{attrs:{class:"token function"}},[t._v("addScriptTag")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'http://example.com/ip?callback=foo'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     \n     "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'response data: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("stringify")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                      \n         \n")])])]),a("p",[t._v("请求时,接口地址是作为构建出的脚本标签的src的,这样,当脚本标签构建出来时,最终的src是接口返回的内容")]),t._v(" "),a("ul",[a("li",[t._v("服务端对应的接口在返回参数外面添加函数包裹层")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("   "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{attrs:{class:"token string"}},[t._v('"test"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"testData"')]),t._v("\n   "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                     \n")])])]),a("p",[t._v("由于"),a("code",[t._v("<script>")]),t._v("元素请求的脚本，直接作为代码运行。这时，只要浏览器定义了foo函数，该函数就会立即调==用。作为参数的JSON数据被视为JavaScript对象，而不是字符串，因此避免了使用JSON.parse的步骤。")]),t._v(" "),a("p",[t._v("注意,一般的JSONP接口和普通接口返回数据是有区别的,所以接口如果要做JSONO兼容,需要进行判断是否有对应callback关键字参数,如果有则是JSONP请求,返回JSONP数据,否则返回普通数据")]),t._v(" "),a("h2",{attrs:{id:"cors请求原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors请求原理","aria-hidden":"true"}},[t._v("#")]),t._v(" CORS请求原理")]),t._v(" "),a("p",[t._v("CORS需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE浏览器不能低于IE10。")]),t._v(" "),a("p",[t._v("整个CORS通信过程，都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS通信与同源的AJAX通信没有差别，代码完全一样。浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。")]),t._v(" "),a("p",[t._v("因此，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。")]),t._v(" "),a("h3",{attrs:{id:"两种请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 两种请求")]),t._v(" "),a("p",[t._v("浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。只要同时满足以下两大条件，就属于简单请求。")]),t._v(" "),a("ul",[a("li",[t._v("请求方法是以下三种方法之一：HEAD,GET,POST")]),t._v(" "),a("li",[t._v("HTTP的头信息不超出以下几种字段：\n"),a("ul",[a("li",[t._v("Accept")]),t._v(" "),a("li",[t._v("Accept-Language")]),t._v(" "),a("li",[t._v("Content-Language")]),t._v(" "),a("li",[t._v("Last-Event-ID")]),t._v(" "),a("li",[t._v("Content-Type(只限于三个值application/x-www-form-urlencoded、 multipart/form-data、text/plain)")])])])]),t._v(" "),a("p",[t._v("凡是不同时满足上面两个条件，就属于非简单请求。")]),t._v(" "),a("h3",{attrs:{id:"简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 简单请求")]),t._v(" "),a("p",[t._v("对于简单请求，浏览器直接发出CORS请求。具体来说，就是在头信息之中，增加一个"),a("code",[t._v("Origin")]),t._v("字段。")]),t._v(" "),a("p",[t._v("下面是一个例子，浏览器发现这次跨源AJAX请求是简单请求，就自动在头信息之中，添加一个"),a("code",[t._v("Origin")]),t._v("字段。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("   "),a("span",{attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("cors "),a("span",{attrs:{class:"token constant"}},[t._v("HTTP")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n   Origin"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bob"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n   Host"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" api"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alice"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n   Accept"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Language"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" en"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token constant"}},[t._v("US")]),t._v("\n   Connection"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keep"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("alive\n   User"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Agent"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Mozilla"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("5.0")]),a("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("上面的头信息中，"),a("code",[t._v("Origin")]),t._v("字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("Origin")]),t._v("指定的源，不在许可范围内，服务器会返回一个正常的HTTP回应。浏览器发现，这个回应的头信息没有包含"),a("code",[t._v("Access-Control-Allow-Origin")]),t._v("字段（详见下文），就知道出错了，从而抛出一个错误，被"),a("code",[t._v("XMLHttpRequest")]),t._v("的"),a("code",[t._v("onerror")]),t._v("回调函数捕获。注意，这种错误无法通过状态码识别，因为HTTP回应的状态码有可能是200。")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("Origin")]),t._v("指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Access-Control-Allow-Origin: http://api.bob.com")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Access-Control-Allow-Credentials: true")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Access-Control-Expose-Headers: FooBar")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Content-Type: text/html; charset=utf-8")])]),t._v(" "),a("p",[t._v("上面的头信息之中，有三个与CORS请求相关的字段，都以"),a("code",[t._v("Access-Control-")]),t._v("开头。")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Access-Control-Allow-Origin")])]),t._v(" "),a("p",[t._v("该字段是必须的。它的值要么是请求时"),a("code",[t._v("Origin")]),t._v("字段的值，要么是一个"),a("code",[t._v("*")]),t._v("，表示接受任意域名的请求")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Access-Control-Allow-Credentials")])]),t._v(" "),a("p",[t._v("该字段可选。它的值是一个布尔值，表示是否允许发送Cookie。默认情况下，Cookie不包括在CORS请求之中。设为"),a("code",[t._v("true")]),t._v("，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。这个值也只能设为"),a("code",[t._v("true")]),t._v("，如果服务器不要浏览器发送Cookie，删除该字段即可。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Access-Control-Expose-Headers")])]),t._v(" "),a("p",[t._v("该字段可选。CORS请求时，"),a("code",[t._v("XMLHttpRequest")]),t._v("对象的"),a("code",[t._v("getResponseHeader()")]),t._v("方法只能拿到6个基本字段："),a("code",[t._v("Cache-Control")]),t._v("、"),a("code",[t._v("Content-Language")]),t._v("、"),a("code",[t._v("Content-Type")]),t._v("、"),a("code",[t._v("Expires")]),t._v("、"),a("code",[t._v("Last-Modified")]),t._v("、"),a("code",[t._v("Pragma")]),t._v("。如果想拿到其他字段，就必须在"),a("code",[t._v("Access-Control-Expose-Headers")]),t._v("里面指定。上面的例子指定，"),a("code",[t._v("getResponseHeader('FooBar')")]),t._v("可以返回"),a("code",[t._v("FooBar")]),t._v("字段的值。")])])])])]),t._v(" "),a("h3",{attrs:{id:"非简单要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非简单要求","aria-hidden":"true"}},[t._v("#")]),t._v(" 非简单要求")]),t._v(" "),a("p",[t._v("非简单请求是那种对服务器有特殊要求的请求，比如请求方法是"),a("code",[t._v("PUT")]),t._v("或"),a("code",[t._v("DELETE")]),t._v("，或者"),a("code",[t._v("Content-Type")]),t._v("字段的类型是"),a("code",[t._v("application/json")]),t._v("。")]),t._v(" "),a("p",[t._v('非简单请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为"预检"请求（preflight）。')]),t._v(" "),a("p",[t._v("浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的"),a("code",[t._v("XMLHttpRequest")]),t._v("请求，否则就报错 。")]),t._v(" "),a("p",[t._v("下面是一段浏览器的JavaScript脚本。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'http://api.alice.com/cors'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("open")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'PUT'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("setRequestHeader")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'X-Custom-Header'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'value'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("send")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面代码中，HTTP请求的方法是"),a("code",[t._v("PUT")]),t._v("，并且发送一个自定义头信息"),a("code",[t._v("X-Custom-Header")]),t._v("。")]),t._v(" "),a("p",[t._v('浏览器发现，这是一个非简单请求，就自动发出一个"预检"请求，要求服务器确认可以这样请求。下面是这个"预检"请求的HTTP头信息。')]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("   "),a("span",{attrs:{class:"token constant"}},[t._v("OPTIONS")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("cors "),a("span",{attrs:{class:"token constant"}},[t._v("HTTP")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n   Origin"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bob"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n   Access"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Request"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Method"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("PUT")]),t._v("\n   Access"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Request"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Headers"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("X")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Custom"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Header\n   Host"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" api"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alice"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n   Accept"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Language"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" en"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token constant"}},[t._v("US")]),t._v("\n   Connection"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keep"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("alive\n   User"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Agent"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Mozilla"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("5.0")]),a("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v('"预检"请求用的请求方法是'),a("code",[t._v("OPTIONS")]),t._v("，表示这个请求是用来询问的。头信息里面，关键字段是"),a("code",[t._v("Origin")]),t._v("，表示请求来自哪个源。 除了"),a("code",[t._v("Origin")]),t._v('字段，"预检"请求的头信息包括两个特殊字段。')]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Access-Control-Request-Method")])]),t._v(" "),a("p",[t._v("该字段是必须的，用来列出浏览器的CORS请求会用到哪些HTTP方法，上例是"),a("code",[t._v("PUT")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Access-Control-Request-Headers")])]),t._v(" "),a("p",[t._v("该字段是一个逗号分隔的字符串，指定浏览器CORS请求会额外发送的头信息字段，上例是"),a("code",[t._v("X-Custom-Header")]),t._v("。")])])]),t._v(" "),a("p",[t._v('服务器收到"预检"请求以后，检查了'),a("code",[t._v("Origin")]),t._v("、"),a("code",[t._v("Access-Control-Request-Method")]),t._v("和"),a("code",[t._v("Access-Control-Request-Headers")]),t._v("字段以后，确认允许跨源请求，就可以做出回应。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token constant"}},[t._v("HTTP")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("1.1")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("OK")]),t._v("\nDate"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Mon"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("01")]),t._v(" Dec "),a("span",{attrs:{class:"token number"}},[t._v("2008")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("01")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("15")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("39")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\nServer"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Apache"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token number"}},[t._v("2.0")]),a("span",{attrs:{class:"token number"}},[t._v(".61")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Unix"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAccess"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Origin"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bob"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\nAccess"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Methods"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("GET")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("POST")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("PUT")]),t._v("\nAccess"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Headers"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("X")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Custom"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Header\nContent"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Type"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" charset"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("utf"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("8")]),t._v("\nContent"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Encoding"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gzip\nContent"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Length"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\nKeep"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Alive"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" timeout"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token number"}},[t._v("100")]),t._v("\nConnection"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Keep"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Alive\nContent"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("Type"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("plain\n")])])]),a("p",[t._v("上面的HTTP回应中，关键的是"),a("code",[t._v("Access-Control-Allow-Origin")]),t._v("字段，表示"),a("code",[t._v("http://api.bob.com")]),t._v("可以请求数据。该字段也可以设为星号*，表示同意任意跨源请求。")]),t._v(" "),a("p",[t._v("服务器回应的其他CORS相关字段如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Access-Control-Allow-Methods: GET, POST, PUT\nAccess-Control-Allow-Headers: X-Custom-Header\nAccess-Control-Allow-Credentials: true\nAccess-Control-Max-Age: 1728000\n")])])]),a("ol",[a("li",[a("p",[a("strong",[t._v("Access-Control-Allow-Methods")])]),t._v(" "),a("p",[t._v('该字段必需，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次"预检"请求。')])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Access-Control-Allow-Headers")])]),t._v(" "),a("p",[t._v("如果浏览器请求包括"),a("code",[t._v("Access-Control-Request-Headers")]),t._v("字段，则"),a("code",[t._v("Access-Control-Allow-Headers")]),t._v('字段是必需的。它也是一个逗号分隔的字符串，表明服务器支持的所有头信息字段，不限于浏览器在"预检"中请求的字段。')])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Access-Control-Max-Age")])]),t._v(" "),a("p",[t._v("该字段可选，用来指定本次预检请求的有效期，单位为秒。上面结果中，有效期是20天（1728000秒），即允许缓存该条回应1728000秒（即20天），在此期间，不用发出另一条预检请求。")]),t._v(" "),a("p",[t._v('一旦服务器通过了"预检"请求，以后每次浏览器正常的CORS请求，就都跟简单请求一样，会有一个'),a("code",[t._v("Origin")]),t._v("头信息字段。服务器的回应，也都会有一个"),a("code",[t._v("Access-Control-Allow-Origin")]),t._v("头信息字段。")])])]),t._v(" "),a("h3",{attrs:{id:"options预检的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options预检的优化","aria-hidden":"true"}},[t._v("#")]),t._v(" OPTIONS预检的优化")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Access-Control-Max-Age:\n")])])]),a("p",[t._v("这个头部加上后，可以缓存此次请求的秒数。")]),t._v(" "),a("p",[t._v("在这个时间范围内，所有同类型的请求都将不再发送预检请求而是直接使用此次返回的头作为判断依据。")]),t._v(" "),a("p",[t._v("非常有用，可以大幅优化请求次数")])])}],!1,null,null,null);s.default=o.exports}}]);