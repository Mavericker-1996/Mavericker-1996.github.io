(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{167:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("h2",{attrs:{id:"_1-vue双向绑定原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue双向绑定原理","aria-hidden":"true"}},[e._v("#")]),e._v(" 1. "),a("a",{attrs:{href:"https://juejin.im/post/5aded86ff265da0b7e0be7c8",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue双向绑定原理"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("https://segmentfault.com/a/1190000008584577")]),e._v(" "),e._m(1)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"vue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue","aria-hidden":"true"}},[this._v("#")]),this._v(" Vue")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("p",[e._v("单向绑定非常简单，就是把Model绑定到View，当我们用JavaScript代码更新Model时，View就会自动更新。有单向绑定，就有双向绑定。如果用户更新了View，Model的数据也自动被更新了，这种情况就是双向绑定。什么情况下用户可以更新View呢？填写表单就是一个最直接的例子。当用户填写表单时，View的状态就被更新了，如果此时MVVM框架可以自动更新Model的状态，那就相当于我们把Model和View做了双向绑定：")])]),e._v(" "),a("li",[a("h5",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[e._v("#")]),e._v(" 语法")]),e._v(" "),a("p",[e._v("Object.defineProperty(object, propertyname, descriptor) //参数（3个且必须）")])]),e._v(" "),a("li",[a("h5",{attrs:{id:"原理图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理图","aria-hidden":"true"}},[e._v("#")]),e._v(" 原理图")]),e._v(" "),a("h5",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("img",{attrs:{src:"http://ofluknnfq.bkt.clouddn.com/blog/180727/5c16BeAGIC.png?imageslim",alt:"mark"}})])]),e._v(" "),a("li",[a("h5",{attrs:{id:"参数详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数详解","aria-hidden":"true"}},[e._v("#")]),e._v(" 参数详解")]),e._v(" "),a("p",[e._v("它是es5一个方法，可以直接在一个对象上定义一个新属性，或者修改一个已经存在的属性， 并返回这个对象，对象里目前存在的属性描述符有两种主要形式：数据描述符和存取描述符。数据描述符是一个拥有可写或不可写值的属性。存取描述符是由一对 getter-setter 函数功能来描述的属性。描述符必须是两种形式之一；"),a("strong",[e._v("不能同时是两者")]),e._v("。 属性描述符包括：configurable(可配置性相当于属性的总开关，只有为true时才能设置，而且不可逆)、Writable(是否可写，为false时将不能够修改属性的值)、Enumerable(是否可枚举，为false时for..in以及Object.keys()将不能枚举出该属性)、get(一个给属性提供 getter 的方法)、set(一个给属性提供 setter 的方法)")])])])}],!1,null,null,null);t.default=s.exports}}]);